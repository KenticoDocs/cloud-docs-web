extends ../includes/layout.pug
block content
    main(id='main')
        .article
            if (!containsChangelog)
                .article__left
                    include ../includes/sub-navigation.pug
            .article__right
                div(class=`article__content${containsChangelog ? ' article__content--anchors-only' : ''}`)&attributes(smartLink?.itemId(itemId))
                    if termDefinitions
                        .term-tooltip-container(aria-hidden='true')
                            .term-tooltip-content
                            .term-tooltip-close
                            .term-tooltip-arrow
                    h1&attributes(smartLink?.elementCodename('title')) !{content.title.value}
                    .article__notes
                        if (!hideAuthorLastModified)
                            time.article__date(datetime= moment(content.system.lastModified).format('YYYY-MM-DD')) !{moment(content.system.lastModified).format('MMMM D, YYYY')}
                            .article__author
                                if (content.author.value && content.author.value.length)
                                    each author, index in content.author.value
                                        - let separator = ''; if (index < content.author.value.length - 2) {separator = ', ';} if (index === content.author.value.length - 2) {separator = ' and '}
                                        span&attributes(smartLink?.itemId(content.system.id))&attributes(smartLink?.elementCodename('author')) !{author.name.value}!{separator}
                                else
                                    span&attributes(smartLink?.itemId(UIMessages.system.id))&attributes(smartLink?.elementCodename('article___no_author')) !{helper.getValue(UIMessages, 'article___no_author')}
                            if (readingTime)
                                .article__reading-time !{readingTime} min read
                        if (!req.query.pdf && !containsChangelog && process.env['Api2Pdf.ApiKey'])
                            a(data-pdf-link, href=`/learn/pdf/?url=${req.originalUrl}`, target='_blank')&attributes(smartLink?.itemId(UIMessages.system.id))&attributes(smartLink?.elementCodename('article___download_pdf')) #{helper.getValue(UIMessages, 'article___download_pdf')}
                        if (req.query.pdf)
                            .article__tech(data-platform-note)
                        if (isPreview && !req.query.pdf)
                            a(href=`https://app.kontent.ai/goto/edit-item/project/${projectId}/variant-codename/${language}/item/${content.system.id}`, target='_blank', rel='noopener') Edit
                    if (platform && !availablePlatforms.length)
                        .language-selector.language-selector--unprocessed
                            ul.language-selector__list
                                each item in platform
                                    li.language-selector__item
                                        a(href=`#`, data-platform=item.codename, data-slug=item.slug, data-dpr, data-icon=item.icon, data-tech-tooltip=item.title, data-tech-tooltip-active='false', data-tech-tooltip-clicked=helper.getValue(UIMessages, 'technology_picker_tooltip').replace('{TechnologyName}', item.title), class=`language-selector__link`)
                    if (availablePlatforms && availablePlatforms.length)
                        .language-selector.language-selector--unprocessed
                            ul.language-selector__list.language-selector__list--static
                                - var highlighIndex = 0; availablePlatforms.forEach((item, index) => { if (preselectedPlatform === item.slug) { highlighIndex = index } });
                                each item, index in availablePlatforms
                                    li.language-selector__item
                                        a(href=`${req.originalUrl.split('?')[0]}?tech=${item.slug}`, data-dpr, data-icon=item.icon, data-tech-tooltip=item.title, data-tech-tooltip-active='false', data-tech-tooltip-clicked=helper.getValue(UIMessages, 'technology_picker_tooltip').replace('{TechnologyName}', item.title), class=`language-selector__link${index === highlighIndex ? ' language-selector__link--active' : ''}`)
                    if (introduction !== '<p><br></p>')
                        .article__introduction
                            div&attributes(smartLink?.elementCodename('introduction')) !{postprocessMarkup(introduction, res)}
                    if (containsChangelog && releaseNoteContentType)
                        .article__filter&attributes(smartLink?.itemId(UIMessages.system.id))
                            .dropdown(data-filter-group='services')
                                - const labelServices = helper.getValue(UIMessages, 'affected_services_selector_title');
                                .dropdown__label(data-dropdown-label=labelServices)&attributes(smartLink?.elementCodename('affected_services_selector_title')) !{labelServices}
                                .dropdown__list
                                    .filter
                                        ul.filter__list
                                            each item, index in releaseNoteContentType.elements.filter(elem => elem.codename === 'affected_services')[0].options
                                                li.filter__item(data-toggle=`.${item.codename}`) !{item.name}
                            .dropdown(data-filter-group='calendar')
                                - const labelReleased = helper.getValue(UIMessages, 'released_selector_title');
                                .dropdown__label(data-dropdown-label=labelReleased)&attributes(smartLink?.elementCodename('released_selector_title')) !{labelReleased}
                                .dropdown__list.dropdown__list--calendar
                                    .calendar
                            .filter
                                ul.filter__list.filter__list--inline(data-filter-group='changes', data-logic='and')
                                    li.filter__item(data-toggle='.breaking_change')&attributes(smartLink?.elementCodename('toggle_breaking_changes_only')) !{helper.getValue(UIMessages, 'toggle_breaking_changes_only')}
                                    li.filter__item(data-toggle='.released')&attributes(smartLink?.elementCodename('toggle_released')) !{helper.getValue(UIMessages, 'toggle_released')}
                    if (!containsChangelog)
                        div(data-aside-container='table-of-contents')
                            div(data-aside='table-of-contents')
                                include ../includes/table-of-contents.pug
                    if (body)
                        .article__body&attributes(smartLink?.elementCodename('content'))
                            | !{postprocessMarkup(body, res)}
                        if (containsChangelog)
                            .mixitup-page-list
                    if (nextSteps !== '<p><br></p>')
                        .article__next-steps
                            h2.table-of-contents__whatsnext(id='a-whats-next')&attributes(smartLink?.itemId(UIMessages.system.id))&attributes(smartLink?.elementCodename('article___next_steps')) !{helper.getValue(UIMessages, 'article___next_steps')}
                            div&attributes(smartLink?.elementCodename('next_steps')) !{postprocessMarkup(nextSteps, res)}
                    if (!hideFeedback)
                        div(data-aside-container='feedback')
                            div(data-aside='feedback')
                                include ../includes/feedback.pug
            if (!containsChangelog)
                aside.article__aside
                    .aside
    if (!hideFeedback)
        include ../includes/feedback-form.pug
    if (containsChangelog)
        include ../includes/changelog-subscription-form.pug
